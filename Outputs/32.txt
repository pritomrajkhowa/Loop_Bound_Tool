Program Body
{
  int Z;
  int K;
  int m;
  int l;
  int k;
  m = 1;
  l = Z;
  k = 1;
  while (k < K)
  {
    k = k + 1;
    m = (m * Z) + 1;
    l = Z * l;
  }

  m = m * (Z - 1);
}

'main'
Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ Z:int K:int m:int l:int k:int}

Output in normal notation:
1. Frame axioms:
Z1 = Z
K1 = K

2. Output equations:
m1 = (((((((Z*1)*(Z**_N1))-(1*(Z**_N1)))+(Z**_N1))-1)/(Z-1))*(Z-1))
l1 = ((Z**_N1)*Z)
k1 = (_N1+1)

3. Other axioms:
(_N1>=(K-1))
(_n1<_N1) -> ((_n1+1)<K)

4. Assumption :

5. Assertion :


Bound - O(_n) of the loop corresponds to loop constant _N1
(K-1)
Final Complexity ---- O(_n)

