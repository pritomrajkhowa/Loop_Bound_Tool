Program Body
{
  unsigned int n;
  n = __VERIFIER_nondet_uint();
  unsigned int x;
  x = n;
  unsigned int y;
  y = 0;
  while (x > 0)
  {
    x = x - 1;
    y = y + 1;
  }

}

'main'
Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ n:unsigned x:unsigned y:unsigned}

Output in normal notation:
1. Frame axioms:

2. Output equations:
n1 = __VERIFIER_nondet_uint2
x1 = (-(_N1)+__VERIFIER_nondet_uint2)
y1 = (_N1+0)

3. Other axioms:
(_N1>=__VERIFIER_nondet_uint2)
(_n1<_N1) -> ((-(_n1)+__VERIFIER_nondet_uint2)>0)

4. Assumption :

5. Assertion :


Bound - O(_n) of the loop corresponds to loop constant _N1
__VERIFIER_nondet_uint2
Final Complexity ---- O(_n)

