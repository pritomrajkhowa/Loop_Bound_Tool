Program Body
{
  int m;
  int n;
  int p;
  int q;
  int i;
  i = 1;
  while (i <= n)
  {
    int j;
    j = 1;
    while (j <= m)
    {
      int k;
      k = i;
      while (k <= p)
      {
        int l;
        l = q;
        while (l <= j)
        {
          l = l + 1;
        }

        k = k + 1;
      }

      j = j + 1;
    }

    i = i + 1;
  }

}

'main'
Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ m:int n:int p:int q:int i:int j:int k:int l:int}

Output in normal notation:
1. Frame axioms:
m1 = m
n1 = n
p1 = p
q1 = q

2. Output equations:
i1 = (_N4+1)
j1 = (_N3((_N4+1))+1)
k1 = (((_N4+1)+_N2((_N3((_N4+1))+1),(_N4+1)))+1)
l1 = (q+_N1((_N2((_N3((_N4+1))+1),(_N4+1))+1),(_N3_1((_N4+1))+1),(_N4+1)))

3. Other axioms:
((_N1(_n2,_n3,_n4)+q)>(_n3+1))
(_n1<_N1(_n2,_n3,_n4)) -> ((_n1+q)<=(_n3+1))
((_N2(_n3,_n4)+(_n4+1))>p)
(_n2<_N2(_n3,_n4)) -> ((_n2+(_n4+1))<=p)
((_N3(_n4)+1)>m)
(_n3<_N3(_n4)) -> ((_n3+1)<=m)
((_N4+1)>n)
(_n4<_N4) -> ((_n4+1)<=n)

4. Assumption :

5. Assertion :


Bound - O(_n) of the loop corresponds to loop constant _N1(_n2,_n3,_n4)
ForAll(_n3,Implies(And(_n3>=0,_n3<m),((_n3-q)+2)))
Bound - O(_n) of the loop corresponds to loop constant _N2(_n3,_n4)
ForAll(_n4,Implies(And(_n4>=0,_n4<n),(-(_n4)+p)))
Bound - O(_n) of the loop corresponds to loop constant _N3(_n4)
m
Bound - O(_n) of the loop corresponds to loop constant _N4
n
Final Complexity ---- O(_n**4)

