Program Body
{
  int x;
  int y;
  int z;
  while (x > y)
  {
    x = x - (y + 1);
    z = 100 + (2 * y);
    while (z > 0)
    {
      z = z - 1;
    }

  }

}

'main'
Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ x:int y:int z:int}

Output in normal notation:
1. Frame axioms:
y1 = y

2. Output equations:
x1 = (((-(_N2)*y)-_N2)+x)
z1 = (((2*y)-_N1((_N2+1)))+100)

3. Other axioms:
(_N1(_n2)>=(100+(2*y)))
(_n1<_N1(_n2)) -> ((-(_n1)+(100+(2*y)))>0)
((_N2*(y+1))>=(x-y))
(_n2<_N2) -> ((((-(_n2)*y)-_n2)+x)>y)

4. Assumption :

5. Assertion :


Bound - O(_n) of the loop corresponds to loop constant _N1(_n2)
((2*y)+100)
Bound - O(_n) of the loop corresponds to loop constant _N2
((x-y)/(y+1))
Final Complexity ---- O(_n**2)

