Program Body
{
  int A;
  int m;
  int dir;
  int i;
  i = m;
  while ((0 < i) && (i < A))
  {
    if (dir != 1)
      i = i - 1;

  }

}

'main'
Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ A:int m:int dir:int i:int}

Output in normal notation:
1. Frame axioms:
A1 = A
m1 = m
dir1 = dir

2. Output equations:
i1 = i2(_N1)

3. Other axioms:
i2((_n1+1)) = ite((dir!=1),(i2(_n1)-1),i2(_n1))
i2(0) = m
((0>=i2(_N1)) or (i2(_N1)>=A))
(_n1<_N1) -> ((0<i2(_n1)) and (i2(_n1)<A))

4. Assumption :

5. Assertion :


Bound - O(_n) of the loop corresponds to loop constant _n1
((-(1) or -(1)) or (m or (-(A)+m)))
Final Complexity ---- O(_n)

