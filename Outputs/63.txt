Program Body
{
  int RET;
  RET = 0;
  int a[100000];
  int i;
  i = 0;
  while (i < 100000)
  {
    a[i] = 42;
    i = i + 1;
  }

  i = 0;
  while (i < 100000)
  {
    a[i] = 43;
    i = i + 1;
  }

  i = 0;
  while (i < 100000)
  {
    a[i] = 44;
    i = i + 1;
  }

  i = 0;
  while (i < 100000)
  {
    a[i] = 45;
    i = i + 1;
  }

  i = 0;
  while (i < 100000)
  {
    a[i] = 46;
    i = i + 1;
  }

  i = 0;
  while (i < 100000)
  {
    a[i] = 47;
    i = i + 1;
  }

  i = 0;
  while (i < 100000)
  {
    a[i] = 48;
    i = i + 1;
  }

  i = 0;
  while (i < 100000)
  {
    a[i] = 49;
    i = i + 1;
  }

  i = 0;
  while (i < 100000)
  {
    a[i] = 50;
    i = i + 1;
  }

  RET = 0;
}

'main'
Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ RET:int a:array i:int}

Output in normal notation:
1. Frame axioms:
a1 = a

2. Output equations:
main = 0
d1array1(_x1,_x2) = d1array18(_x1,_x2,_N9)
i1 = (_N9+0)

3. Other axioms:
d1array2(_x1,_x2,(_n1+1)) = ite(((_x1=a) and (_x2=(_n1+0))),42,d1array2(_x1,_x2,_n1))
d1array2(_x1,_x2,0) = d1array(_x1,_x2)
(_N1>=(100000-0))
(_n1<_N1) -> ((_n1+0)<100000)
d1array4(_x1,_x2,(_n2+1)) = ite(((_x1=a) and (_x2=(_n2+0))),43,d1array4(_x1,_x2,_n2))
d1array4(_x1,_x2,0) = d1array2(_x1,_x2,_N1)
(_N2>=(100000-0))
(_n2<_N2) -> ((_n2+0)<100000)
d1array6(_x1,_x2,(_n3+1)) = ite(((_x1=a) and (_x2=(_n3+0))),44,d1array6(_x1,_x2,_n3))
d1array6(_x1,_x2,0) = d1array4(_x1,_x2,_N2)
(_N3>=(100000-0))
(_n3<_N3) -> ((_n3+0)<100000)
d1array8(_x1,_x2,(_n4+1)) = ite(((_x1=a) and (_x2=(_n4+0))),45,d1array8(_x1,_x2,_n4))
d1array8(_x1,_x2,0) = d1array6(_x1,_x2,_N3)
(_N4>=(100000-0))
(_n4<_N4) -> ((_n4+0)<100000)
d1array10(_x1,_x2,(_n5+1)) = ite(((_x1=a) and (_x2=(_n5+0))),46,d1array10(_x1,_x2,_n5))
d1array10(_x1,_x2,0) = d1array8(_x1,_x2,_N4)
(_N5>=(100000-0))
(_n5<_N5) -> ((_n5+0)<100000)
d1array12(_x1,_x2,(_n6+1)) = ite(((_x1=a) and (_x2=(_n6+0))),47,d1array12(_x1,_x2,_n6))
d1array12(_x1,_x2,0) = d1array10(_x1,_x2,_N5)
(_N6>=(100000-0))
(_n6<_N6) -> ((_n6+0)<100000)
d1array14(_x1,_x2,(_n7+1)) = ite(((_x1=a) and (_x2=(_n7+0))),48,d1array14(_x1,_x2,_n7))
d1array14(_x1,_x2,0) = d1array12(_x1,_x2,_N6)
(_N7>=(100000-0))
(_n7<_N7) -> ((_n7+0)<100000)
d1array16(_x1,_x2,(_n8+1)) = ite(((_x1=a) and (_x2=(_n8+0))),49,d1array16(_x1,_x2,_n8))
d1array16(_x1,_x2,0) = d1array14(_x1,_x2,_N7)
(_N8>=(100000-0))
(_n8<_N8) -> ((_n8+0)<100000)
d1array18(_x1,_x2,(_n9+1)) = ite(((_x1=a) and (_x2=(_n9+0))),50,d1array18(_x1,_x2,_n9))
d1array18(_x1,_x2,0) = d1array16(_x1,_x2,_N8)
(_N9>=(100000-0))
(_n9<_N9) -> ((_n9+0)<100000)

4. Assumption :

5. Assertion :


Bound - O(_n) of the loop corresponds to loop constant _N1
100000
Bound - O(_n) of the loop corresponds to loop constant _N2
100000
Bound - O(_n) of the loop corresponds to loop constant _N3
100000
Bound - O(_n) of the loop corresponds to loop constant _N4
100000
Bound - O(_n) of the loop corresponds to loop constant _N5
100000
Bound - O(_n) of the loop corresponds to loop constant _N6
100000
Bound - O(_n) of the loop corresponds to loop constant _N7
100000
Bound - O(_n) of the loop corresponds to loop constant _N8
100000
Bound - O(_n) of the loop corresponds to loop constant _N9
100000
Final Complexity ---- O(9*_n)

