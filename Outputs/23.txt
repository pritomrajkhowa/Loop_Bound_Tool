Program Body
{
  int x;
  int z;
  int A;
  while (x < A)
  {
    if (z > x)
    {
      x = x + 1;
    }
    else
    {
      z = z + 1;
    }

  }

}

'main'
Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ x:int z:int A:int}

Output in normal notation:
1. Frame axioms:
A1 = A

2. Output equations:
x1 = x3(_N1)
z1 = z3(_N1)

3. Other axioms:
x3((_n1+1)) = ite((z3(_n1)>x3(_n1)),(x3(_n1)+1),x3(_n1))
z3((_n1+1)) = ite((z3(_n1)>x3(_n1)),z3(_n1),(z3(_n1)+1))
x3(0) = x
z3(0) = z
(0<=(-(A)+x3(_N1)))
(_n1<_N1) -> (x3(_n1)<A)

4. Assumption :

5. Assertion :


Bound - O(_n) of the loop corresponds to loop constant _N1
((-(x)+z) or (((x-z)+1)+(A-x)))
Final Complexity ---- O(_n)

