Program Body
{
  int RET;
  RET = 0;
  int i;
  int j;
  int k;
  i = 0;
  k = 9;
  j = -100;
  while (i <= 100)
  {
    i = i + 1;
    while (j < 20)
    {
      j = i + j;
    }

    k = 4;
    while (k <= 3)
    {
      k = k + 1;
    }

  }

  RET = 0;
}

'main'
Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ RET:int i:int j:int k:int}

Output in normal notation:
1. Frame axioms:

2. Output equations:
main = 0
i1 = (_N3+0)
j1 = j6(_N3)
k1 = (_N2((_N3+1))+4)

3. Other axioms:
(_N1(_n3)>=((20-j6(_n3))/((_n3+0)+1)))
(_n1<_N1(_n3)) -> (((_n1*((_n3+0)+1))+j6(_n3))<20)
((_N2(_n3)+4)>3)
(_n2<_N2(_n3)) -> ((_n2+4)<=3)
j6((_n3+1)) = ((_N1(_n3)*((_n3+0)+1))+j6(_n3))
j6(0) = -(100)
((_N3+0)>100)
(_n3<_N3) -> ((_n3+0)<=100)

4. Assumption :

5. Assertion :


Bound - O(_n) of the loop corresponds to loop constant _N1(_n3)
(120 or 0)
Bound - O(_n) of the loop corresponds to loop constant _N2(_n3)
0
Bound - O(_n) of the loop corresponds to loop constant _N3
101
Final Complexity ---- O(2*_n)

