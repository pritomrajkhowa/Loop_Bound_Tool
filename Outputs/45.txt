Program Body
{
  int X;
  int Y;
  int r;
  int l;
  r = X;
  if (Y < 0)
  {
    l = Y;
    while (l != 0)
    {
      r = r - 1;
      l = l + 1;
    }

  }
  else
  {
    l = Y;
    while (l != 0)
    {
      r = r + 1;
      l = l - 1;
    }

  }

}

'main'
Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ X:int Y:int r:int l:int}

Output in normal notation:
1. Frame axioms:
X1 = X
Y1 = Y

2. Output equations:
r1 = ite((Y<0),(-(_N1)+X),(_N2+X))
l1 = ite((Y<0),(_N1+Y),(-(_N2)+Y))

3. Other axioms:
((_N1+Y)==0)
(_n1<_N1) -> ((_n1+Y)!=0)
((-(_N2)+Y)==0)
(_n2<_N2) -> ((-(_n2)+Y)!=0)

4. Assumption :

5. Assertion :


Bound - O(_n) of the loop corresponds to loop constant _N1
-(Y)
Bound - O(_n) of the loop corresponds to loop constant _N2
Y
Final Complexity ---- O(2*_n)

