Program Body
{
  int sum;
  int i;
  sum = 0;
  i = 0;
  while (i < X)
  {
    i = i + 1;
    sum = sum + ((((((i * i) * i) * i) * i) * i) * i);
  }

}

'main'
Function Name:
main
Return Type:
int
Input Variables:
{}
Local Variables:
{ sum:int i:int}

Output in normal notation:
1. Frame axioms:

2. Output equations:
sum1 = sum2(_N1)
i1 = (_N1+0)

3. Other axioms:
sum2((_n1+1)) = (sum2(_n1)+((((((((_n1+0)+1)*((_n1+0)+1))*((_n1+0)+1))*((_n1+0)+1))*((_n1+0)+1))*((_n1+0)+1))*((_n1+0)+1)))
sum2(0) = 0
(_N1>=(X-0))
(_n1<_N1) -> ((_n1+0)<X)

4. Assumption :

5. Assertion :


Bound - O(_n) of the loop corresponds to loop constant _N1
X
Final Complexity ---- O(_n)

